<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>bug on Andy Dote</title><link>https://andydote.co.uk/tags/bug/</link><description>Recent content in bug on Andy Dote</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 30 Oct 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://andydote.co.uk/tags/bug/rss.xml" rel="self" type="application/rss+xml"/><item><title>SqlDataReader.HasRows Problems</title><link>https://andydote.co.uk/2012/10/30/sqldatareaderhasrows-problems/</link><pubDate>Tue, 30 Oct 2012 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2012/10/30/sqldatareaderhasrows-problems/</guid><description>For the last 6 years or so at work, we have had an intermittent bug. In this case, intermittent means around once in 6 months or so. A little background to the problem first:
Our data access is done via what was originally Microsoft&amp;rsquo;s SQLHelper class, passing in a stored procedure (and parameters), and our entities use the reader to load all their properties. Pretty straight forward stuff.
The problemis, on the live system, every few months a sproc will stop returning results, for no apparent reason.</description></item><item><title>Databinding to a DataGridView - The order of columns</title><link>https://andydote.co.uk/2010/10/20/databinding-to-a-datagridview-the-order-of-columns/</link><pubDate>Wed, 20 Oct 2010 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2010/10/20/databinding-to-a-datagridview-the-order-of-columns/</guid><description>A while ago I was writing a small history grid in one of our applications at work. It has a single HistoryItem object, which is fairly straightforward, something like this:
Class HistoryItem { public int ID { get{ return _id; } } public DateTime CreateDate { get { return _createDate; } } public String Creator { get { return _creatorName; } } public String Note { get { return _note; } } } This was populated into a List&amp;lt;HistoryItem&amp;gt; and bound to the DataGridView directly:</description></item><item><title>Multilining If statements conditions should be banned. now.</title><link>https://andydote.co.uk/2010/03/24/multilining-if-statements-conditions-should-be-banned-now/</link><pubDate>Wed, 24 Mar 2010 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2010/03/24/multilining-if-statements-conditions-should-be-banned-now/</guid><description>Multilining if statement conditions is bad. I was modifying some code and came across this:
If String.IsNullOrEmpty(_selectedGUID) OrElse _ _selectedGUID = FeeAgreement.GetDefaultContractAgreementGuid OrElse _ _selectedGUID = FeeAgreement.DefaultPermAgreementGuid Then fgFeeAgreements.SetCellCheck(rowAdded, 0, CheckEnum.Checked) _selectedTitle = ag.Title _lastIndexRowSelected = rowAdded End If Which at a glance looks like this:
Single Line If Variable Assignment Variable Assignment
One person suggested that if someone had to do multiline the condition they could at least indent it.</description></item><item><title>Conflicting Unrelated Options: Alps Trackpad vs Microsoft Mouse</title><link>https://andydote.co.uk/2008/04/17/conflicting-unrelated-options-alps-trackpad-vs-microsoft-mouse/</link><pubDate>Thu, 17 Apr 2008 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2008/04/17/conflicting-unrelated-options-alps-trackpad-vs-microsoft-mouse/</guid><description>Usability. It&amp;rsquo;s one of those things that everyone wants, you know, stuff that &amp;lsquo;just works&amp;rsquo;. It&amp;rsquo;s nice when companies go out of their way to make things &amp;lsquo;just work&amp;rsquo;. It&amp;rsquo;s a shame Sony (and others, but I have a Sony, so it&amp;rsquo;s their fault for this exercise) decided to make things harder for me.
Allow me to explain. I have a Sony Vaio (VGN-FE21M), which has an Alps touch pad, which like all touch pad has tapping enabled by default, and that I switch off straight away.</description></item><item><title>Vaio Event Service and Vista</title><link>https://andydote.co.uk/2008/04/08/vaio-event-service-and-vista/</link><pubDate>Tue, 08 Apr 2008 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2008/04/08/vaio-event-service-and-vista/</guid><description>When I first installed vista onto my laptop (a Sony Vaio VGN-FE21M) I also installed all the Sony stuff that I needed for it, mainly the VES (Vaio Event Service) and Control Panel, although there is a lot of other junk that they give you to install.
In fact the first thing I did when I had the laptop new was to wipe MCE 2005 off it, and install XP Pro.</description></item><item><title>Flow Layout Panel and Scroll Wheel Problem</title><link>https://andydote.co.uk/2008/03/29/flow-layout-panel-and-scroll-wheel-problem/</link><pubDate>Sat, 29 Mar 2008 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2008/03/29/flow-layout-panel-and-scroll-wheel-problem/</guid><description>I came across a problem while writing an application for my parents today. If you have a FlowLayoutPanel on your form, and have many items in it, causing it to overflow and require scroll bars, you are unable to scroll the control&amp;rsquo;s content using the mouse wheel.
This is somewhat trying in today&amp;rsquo;s applications, as nearly everyone has a mouse with a scroll wheel, or a track pad on their laptop with a scroll area.</description></item></channel></rss>