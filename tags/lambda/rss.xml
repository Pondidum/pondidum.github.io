<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>lambda on Andy Dote</title><link>https://andydote.co.uk/tags/lambda/</link><description>Recent content in lambda on Andy Dote</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Fri, 17 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://andydote.co.uk/tags/lambda/rss.xml" rel="self" type="application/rss+xml"/><item><title>Using Terraform to setup AWS API-Gateway and Lambda</title><link>https://andydote.co.uk/2017/03/17/terraform-aws-lambda-api-gateway/</link><pubDate>Fri, 17 Mar 2017 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2017/03/17/terraform-aws-lambda-api-gateway/</guid><description>I have been writing simple webhook type applications using Claudiajs, which in behind the scenes is using Aws&amp;rsquo;s Lambda and Api Gateway to make things happen, but I really wanted to understand what exactly it was doing for me, and how I could achieve the same results using Terraform.
The Lambda Function I started off with a simple NodeJS function, in a file called index.js
exports.handler = function(event, context, callback) { callback(null, { statusCode: &amp;#39;200&amp;#39;, body: JSON.</description><content:encoded><![CDATA[<p>I have been writing simple webhook type applications using <a href="https://claudiajs.com/">Claudiajs</a>, which in behind the scenes is using Aws&rsquo;s Lambda and Api Gateway to make things happen, but I really wanted to understand what exactly it was doing for me, and how I could achieve the same results using <a href="https://terraform.io">Terraform</a>.</p>
<h3 id="the-lambda-function">The Lambda Function</h3>
<p>I started off with a simple NodeJS function, in a file called <code>index.js</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#a6e22e">exports</span>.<span style="color:#a6e22e">handler</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">event</span>, <span style="color:#a6e22e">context</span>, <span style="color:#a6e22e">callback</span>) {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">callback</span>(<span style="color:#66d9ef">null</span>, {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">statusCode</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;200&#39;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">body</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">JSON</span>.<span style="color:#a6e22e">stringify</span>({ <span style="color:#e6db74">&#39;message&#39;</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;hello world&#39;</span> }),
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">headers</span><span style="color:#f92672">:</span> {
</span></span><span style="display:flex;"><span>      <span style="color:#e6db74">&#39;Content-Type&#39;</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#39;application/json&#39;</span>,
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>  });
</span></span><span style="display:flex;"><span>};
</span></span></code></pre></div><p>First thing to note about this function is the 2nd argument passed to <code>callback</code>: <strong>this maps to the whole response object not just the body</strong>.  If you try and just run <code>callback(null, { message: 'hello world' })</code>, when called from the API Gateway, you will get the following error in your CloudWatch logs, and not a lot of help on Google:</p>
<blockquote>
<p>Execution failed due to configuration error: &ldquo;Malformed Lambda proxy response&rdquo;</p>
</blockquote>
<h2 id="terraform">Terraform</h2>
<p>We want to upload a zip file containing all our lambda&rsquo;s code, which in this case is just the <code>index.js</code> file.  While this could be done by generating the zip file with a gulp script or manually, we can just get terraform to do this for us, by using the <a href="https://www.terraform.io/docs/providers/archive/d/archive_file.html">archive_file data source</a>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cmake" data-lang="cmake"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">data</span> <span style="color:#960050;background-color:#1e0010">&#34;archive_file&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;lambda&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">type</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;zip&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">source_file</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;index.js&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">output_path</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;lambda.zip&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource</span> <span style="color:#960050;background-color:#1e0010">&#34;aws_lambda_function&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;example_test_function&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">filename</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${data.archive_file.lambda.output_path}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">function_name</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;example_test_function&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">role</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_iam_role.example_api_role.arn}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">handler</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;index.handler&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">runtime</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;nodejs4.3&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">source_code_hash</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${</span>base64sha256(<span style="color:#e6db74">file(</span><span style="color:#e6db74">&#34;${data.archive_file.lambda.output_path}&#34;</span>)<span style="color:#960050;background-color:#1e0010">)}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">publish</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">true
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span></code></pre></div><p>By using the <code>source_code_hash</code> property, Terraform can detect when the zip file has changed, and thus know whether to re-upload the function when you call <code>terraform apply</code>.</p>
<p>We also need an IAM role for the function to run under.  While the policy could be written inline, but I have found it more expressive to have a separate file for the role policy:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cmake" data-lang="cmake"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource</span> <span style="color:#960050;background-color:#1e0010">&#34;aws_iam_role&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;example_api_role&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">name</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;example_api_role&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">assume_role_policy</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${</span>file(<span style="color:#e6db74">&#34;policies/lambda-role.json&#34;</span>)<span style="color:#960050;background-color:#1e0010">}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;Version&#34;</span>: <span style="color:#e6db74">&#34;2012-10-17&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;Statement&#34;</span>: [
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;Action&#34;</span>: <span style="color:#e6db74">&#34;sts:AssumeRole&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;Principal&#34;</span>: {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;Service&#34;</span>: [
</span></span><span style="display:flex;"><span>          <span style="color:#e6db74">&#34;lambda.amazonaws.com&#34;</span>,
</span></span><span style="display:flex;"><span>          <span style="color:#e6db74">&#34;apigateway.amazonaws.com&#34;</span>
</span></span><span style="display:flex;"><span>        ]
</span></span><span style="display:flex;"><span>      },
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;Effect&#34;</span>: <span style="color:#e6db74">&#34;Allow&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;Sid&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  ]
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>That&rsquo;s the lambda done - you can login to the AWS Console, setup a test event and execute it if you want :)</p>
<h3 id="creating-the-api-gateway">Creating the Api Gateway</h3>
<p>We are going to create a simple api, with one endpoint (or resource, in AWS terminology).</p>
<p>First we need to define an api root:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cmake" data-lang="cmake"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource</span> <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_rest_api&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;example_api&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">name</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;ExampleAPI&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">description</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;Example</span> <span style="color:#960050;background-color:#1e0010">Rest</span> <span style="color:#960050;background-color:#1e0010">Api&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span></code></pre></div><p>And then a resource to represent the <code>/messages</code> endpoint, and a method to handle <code>POST</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cmake" data-lang="cmake"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource</span> <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_resource&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;example_api_resource&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">rest_api_id</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_api_gateway_rest_api.example_api.id}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">parent_id</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_api_gateway_rest_api.example_api.root_resource_id}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">path_part</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;messages&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource</span> <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_method&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;example_api_method&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">rest_api_id</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_api_gateway_rest_api.example_api.id}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">resource_id</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_api_gateway_resource.example_api_resource.id}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">http_method</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;POST&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">authorization</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;NONE&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span></code></pre></div><p>The <code>aws_api_gateway_resource</code> can be attached to other <code>aws_api_gateway_resource</code>s rather than to the api root too, allowing for multi level routes.  You can do this by changing the <code>parent_id</code> property to point to another <code>aws_api_gateway_resource.id</code>.</p>
<p>Now we need add an integration between the api and lambda:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cmake" data-lang="cmake"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource</span> <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_integration&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;example_api_method-integration&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">rest_api_id</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_api_gateway_rest_api.example_api.id}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">resource_id</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_api_gateway_resource.example_api_resource.id}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">http_method</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_api_gateway_method.example_api_method.http_method}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">type</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;AWS_PROXY&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">uri</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;arn:aws:apigateway:${var.region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${var.region}:${var.account_id}:function:${aws_lambda_function.example_test_function.function_name}/invocations&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">integration_http_method</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;POST&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span></code></pre></div><p>Finally a couple of deployment stages, and an output variable for each to let you know the api&rsquo;s urls:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cmake" data-lang="cmake"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource</span> <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_deployment&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;example_deployment_dev&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">depends_on</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">[
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>    <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_method.example_api_method&#34;,
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>    <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_integration.example_api_method-integration&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">]
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">rest_api_id</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_api_gateway_rest_api.example_api.id}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">stage_name</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;dev&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource</span> <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_deployment&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;example_deployment_prod&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">depends_on</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">[
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>    <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_method.example_api_method&#34;,
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>    <span style="color:#960050;background-color:#1e0010">&#34;aws_api_gateway_integration.example_api_method-integration&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">]
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">rest_api_id</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_api_gateway_rest_api.example_api.id}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">stage_name</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;api&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">output</span> <span style="color:#960050;background-color:#1e0010">&#34;dev_url&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">value</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;https://${aws_api_gateway_deployment.example_deployment_dev.rest_api_id}.execute-api.${var.region}.amazonaws.com/${aws_api_gateway_deployment.example_deployment_dev.stage_name}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">output</span> <span style="color:#960050;background-color:#1e0010">&#34;prod_url&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">value</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;https://${aws_api_gateway_deployment.example_deployment_prod.rest_api_id}.execute-api.${var.region}.amazonaws.com/${aws_api_gateway_deployment.example_deployment_prod.stage_name}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span></code></pre></div><p>The two output variables will cause terraform to output the paths when you call <code>terraform apply</code>, or afterwards when you call <code>terraform output dev_url</code>.  Great for scripts which need to know the urls!</p>
<h3 id="run-it">Run it!</h3>
<p>You can now call your url and see a friendly hello world message:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>curl -X POST -H <span style="color:#e6db74">&#34;Content-Type: application/json&#34;</span> <span style="color:#e6db74">&#34;YOUR_DEV_OR_PROD_URL&#34;</span>
</span></span></code></pre></div><h2 id="switching-to-c">Switching to C#</h2>
<p>Switching to a C#/dotnetcore lambda is very straight forward from here.  We just need to change the <code>aws_lambda_function</code>&rsquo;s runtime and handler properties, and change the <code>archive_file</code> to use <code>source_dir</code> rather than <code>source_file</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cmake" data-lang="cmake"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">data</span> <span style="color:#960050;background-color:#1e0010">&#34;archive_file&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;lambda&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">type</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;zip&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">source_dir</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;./src/published&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">output_path</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;lambda.zip&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource</span> <span style="color:#960050;background-color:#1e0010">&#34;aws_lambda_function&#34;</span> <span style="color:#960050;background-color:#1e0010">&#34;example_test_function&#34;</span> <span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">filename</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${data.archive_file.lambda.output_path}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">function_name</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;example_test_function&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">role</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${aws_iam_role.example_api_role.arn}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">handler</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;ExampleLambdaApi::ExampleLambdaApi.Handler::Handle&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">runtime</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;dotnetcore1.0&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">source_code_hash</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">&#34;${</span>base64sha256(<span style="color:#e6db74">file(</span><span style="color:#e6db74">&#34;${data.archive_file.lambda.output_path}&#34;</span>)<span style="color:#960050;background-color:#1e0010">)}&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span>  <span style="color:#960050;background-color:#1e0010">publish</span> <span style="color:#960050;background-color:#1e0010">=</span> <span style="color:#960050;background-color:#1e0010">true
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}
</span></span></span></code></pre></div><p>Note the <code>handler</code> property is in the form <code>AssemblyName::FullyQualifiedTypeName::MethodName</code>.</p>
<p>For our C# project, we need the following two nugets:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>Amazon.Lambda.APIGatewayEvents
</span></span><span style="display:flex;"><span>Amazon.Lambda.Serialization.Json
</span></span></code></pre></div><p>And the only file in our project looks like so:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-csharp" data-lang="csharp"><span style="display:flex;"><span><span style="color:#66d9ef">namespace</span> ExampleLambdaApi
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">Handler</span>
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">    [LambdaSerializer(typeof(JsonSerializer))]</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">public</span> APIGatewayProxyResponse Handle(APIGatewayProxyRequest apigProxyEvent)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">new</span> APIGatewayProxyResponse
</span></span><span style="display:flex;"><span>      {
</span></span><span style="display:flex;"><span>        Body = apigProxyEvent.Body,
</span></span><span style="display:flex;"><span>        StatusCode = <span style="color:#ae81ff">200</span>,
</span></span><span style="display:flex;"><span>      };
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>One thing worth noting is that the first time a C# function is called it takes a long time - in the region of 5-6 seconds.  Subsequent invocations are in the 200ms region.</p>
<p>All the code for this demo can be found on my <a href="https://github.com/pondidum/">GitHub</a>, in the <a href="https://github.com/Pondidum/Terraform-Demos/tree/master/api-lambda">terraform-demos repository</a>.</p>
]]></content:encoded></item></channel></rss>