<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>lambda on Andy Dote</title><link>https://andydote.co.uk/tags/lambda/</link><description>Recent content in lambda on Andy Dote</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Fri, 17 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://andydote.co.uk/tags/lambda/rss.xml" rel="self" type="application/rss+xml"/><item><title>Using Terraform to setup AWS API-Gateway and Lambda</title><link>https://andydote.co.uk/2017/03/17/terraform-aws-lambda-api-gateway/</link><pubDate>Fri, 17 Mar 2017 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2017/03/17/terraform-aws-lambda-api-gateway/</guid><description>I have been writing simple webhook type applications using Claudiajs, which in behind the scenes is using Aws&amp;rsquo;s Lambda and Api Gateway to make things happen, but I really wanted to understand what exactly it was doing for me, and how I could achieve the same results using Terraform.
The Lambda Function I started off with a simple NodeJS function, in a file called index.js
exports.handler = function(event, context, callback) { callback(null, { statusCode: &amp;#39;200&amp;#39;, body: JSON.</description></item></channel></rss>