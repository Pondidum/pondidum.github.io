<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>gulp on Andy Dote</title><link>https://andydote.co.uk/tags/gulp/</link><description>Recent content in gulp on Andy Dote</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 19 Nov 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://andydote.co.uk/tags/gulp/rss.xml" rel="self" type="application/rss+xml"/><item><title>Generating AssemblyInfo files with Gulp</title><link>https://andydote.co.uk/2015/11/19/generating-assemblyinfo-files-gulpjs/</link><pubDate>Thu, 19 Nov 2015 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2015/11/19/generating-assemblyinfo-files-gulpjs/</guid><description>When changing a project&amp;rsquo;s build script over to Gulpjs, I ran into a problem with one step - creating an AssemblyInfo.cs file.
My projects have their version number in the package.json file, and I read that at compile time, pull in some information from the build server, and write that to an AssemblyVersion.cs file. This file is not tracked by git, and I don&amp;rsquo;t want it showing up as a modification if you run the build script locally.</description><content:encoded><![CDATA[<p>When changing a project&rsquo;s build script over to <a href="http://gulpjs.com/">Gulpjs</a>, I ran into a problem with one step - creating an <code>AssemblyInfo.cs</code> file.</p>
<p>My projects have their version number in the <code>package.json</code> file, and I read that at compile time, pull in some information from the build server, and write that to an <code>AssemblyVersion.cs</code> file.  This file is not tracked by git, and I don&rsquo;t want it showing up as a modification if you run the build script locally.</p>
<p>The problem is that the <a href="https://www.npmjs.com/package/gulp-dotnet-assembly-info">gulp-dotnet-assembly-info</a> package doesn&rsquo;t support generation of files, only updating.  To get around this I used the <a href="https://www.npmjs.com/package/gulp-rename">gulp-rename</a> package to read a template file, and generate the non-tracked <code>AssemblyVersion.cs</code> file.</p>
<h2 id="steps">Steps</h2>
<p>First, create an <code>AssemblyVersion.base</code> file, and save it somewhere in your repository.  I usually put it next to the <code>gulpfile</code>, or in the projects <code>Properties</code> directory, depending on if the project has multiple assemblies or not.  This file can be added and tracked by git - it won&rsquo;t get changed.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-csharp" data-lang="csharp"><span style="display:flex;"><span><span style="color:#66d9ef">using</span> System.Reflection;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">using</span> System.Runtime.CompilerServices;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">using</span> System.Runtime.InteropServices;
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">
</span></span></span><span style="display:flex;"><span><span style="color:#a6e22e">[assembly: AssemblyVersion(&#34;0.0.0&#34;)]</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">[assembly: AssemblyFileVersion(&#34;0.0.0&#34;)]</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">[assembly: AssemblyDescription(&#34;Build: 0, Commit Sha: 0&#34;)]</span>
</span></span></code></pre></div><p>Next install the two gulp modules, and import into your <code>gulpfile</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>npm install gulp-rename --save
</span></span><span style="display:flex;"><span>npm install gulp-dotnet-assembly-info --save
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">rename</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">require</span>(<span style="color:#e6db74">&#39;gulp-rename&#39;</span>);
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">assemblyInfo</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">require</span>(<span style="color:#e6db74">&#39;gulp-dotnet-assembly-info&#39;</span>);
</span></span></code></pre></div><p>In the gulp file, read the <code>package.json</code> file and the environment variables.  I do this once at the begining of my <code>gulpfile</code> and use the config all over the place.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">project</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">JSON</span>.<span style="color:#a6e22e">parse</span>(<span style="color:#a6e22e">fs</span>.<span style="color:#a6e22e">readFileSync</span>(<span style="color:#e6db74">&#34;./package.json&#34;</span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">config</span> <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">name</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">project</span>.<span style="color:#a6e22e">name</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">version</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">project</span>.<span style="color:#a6e22e">version</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">commit</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span>.<span style="color:#a6e22e">APPVEYOR_REPO_COMMIT</span> <span style="color:#f92672">||</span> <span style="color:#e6db74">&#34;0&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">buildNumber</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span>.<span style="color:#a6e22e">APPVEYOR_BUILD_VERSION</span> <span style="color:#f92672">||</span> <span style="color:#e6db74">&#34;0&#34;</span>,
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Then add a task to create a new <code>AssemblyVersion.cs</code> file.  Change the <code>src</code> parameter to match where you saved the <code>AssemblyVersion.base</code> file.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#a6e22e">gulp</span>.<span style="color:#a6e22e">task</span>(<span style="color:#e6db74">&#39;version&#39;</span>, <span style="color:#66d9ef">function</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">gulp</span>
</span></span><span style="display:flex;"><span>    .<span style="color:#a6e22e">src</span>(<span style="color:#a6e22e">config</span>.<span style="color:#a6e22e">name</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#39;/Properties/AssemblyVersion.base&#39;</span>)
</span></span><span style="display:flex;"><span>    .<span style="color:#a6e22e">pipe</span>(<span style="color:#a6e22e">rename</span>(<span style="color:#e6db74">&#34;AssemblyVersion.cs&#34;</span>))
</span></span><span style="display:flex;"><span>    .<span style="color:#a6e22e">pipe</span>(<span style="color:#a6e22e">assemblyInfo</span>({
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">version</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">config</span>.<span style="color:#a6e22e">version</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">fileVersion</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">config</span>.<span style="color:#a6e22e">version</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#a6e22e">description</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;Build: &#34;</span> <span style="color:#f92672">+</span>  <span style="color:#a6e22e">config</span>.<span style="color:#a6e22e">buildNumber</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;, Sha: &#34;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">config</span>.<span style="color:#a6e22e">commit</span>
</span></span><span style="display:flex;"><span>    }))
</span></span><span style="display:flex;"><span>    .<span style="color:#a6e22e">pipe</span>(<span style="color:#a6e22e">gulp</span>.<span style="color:#a6e22e">dest</span>(<span style="color:#e6db74">&#39;./&#39;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">config</span>.<span style="color:#a6e22e">name</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#39;/Properties&#39;</span>));
</span></span><span style="display:flex;"><span>});
</span></span></code></pre></div><p>Don&rsquo;t forget to reference the <code>AssemblyVersion.cs</code> file in your csproj!</p>
<p>You can see a full <code>gulpfile</code> with this in here: <a href="https://github.com/Pondidum/Magistrate/blob/master/gulpfile.js">Magistrate gulpfile</a>.</p>
]]></content:encoded></item></channel></rss>