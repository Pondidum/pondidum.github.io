<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>strongtyping on Andy Dote</title><link>https://andydote.co.uk/tags/strongtyping/</link><description>Recent content in strongtyping on Andy Dote</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sat, 08 Sep 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://andydote.co.uk/tags/strongtyping/rss.xml" rel="self" type="application/rss+xml"/><item><title>Semantic Configuration Validation: Earlier</title><link>https://andydote.co.uk/2018/09/08/semantic-configuration-validation-earlier/</link><pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2018/09/08/semantic-configuration-validation-earlier/</guid><description>After my previous post on Validating Your Configuration, one of my colleagues made an interesting point, paraphrasing:
I want to know if the configuration is valid earlier than that. At build time preferably. I don&amp;rsquo;t want my service to not start if part of it is invalid.
There are two points here, namely when to validate, and what to do with the results of validation.
Handling Validation Results If your configuration is invalid, you&amp;rsquo;d think the service should fail to start, as it might be configured in a dangerous manner.</description></item><item><title>Validate Your Configuration</title><link>https://andydote.co.uk/2018/08/26/validate-configuration/</link><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2018/08/26/validate-configuration/</guid><description>As I have written many times before, your application&amp;rsquo;s configuration should be strongly typed and validated that it loads correctly at startup.
This means not only that the source values (typically all represented as strings) can be converted to the target types (int, Uri, TimeSpan etc) but that the values are semantically valid too.
For example, if you have a web.config file with the following AppSetting, and a configuration class to go with it:</description></item><item><title>Strong Configuration Composition</title><link>https://andydote.co.uk/2017/11/09/configuration-composition/</link><pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2017/11/09/configuration-composition/</guid><description>It&amp;rsquo;s no secret I am a fan of strong typing - not only do I talk and blog about it a lot, but I also have a library called Stronk which provides strong typed configuration for non dotnet core projects.
The problem I come across often is large configurations. For example, given the following project structure (3 applications, all reference the Domain project):
DemoService `-- src |-- Domain | |-- Domain.</description></item><item><title>Strong Type All The Configurations</title><link>https://andydote.co.uk/2016/12/06/strong-type-all-the-configurations/</link><pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate><guid>https://andydote.co.uk/2016/12/06/strong-type-all-the-configurations/</guid><description>As anyone I work with can attest, I a have been prattling on about strong typing everything for quite a while. One of the places I feel people don&amp;rsquo;t utilise strong typing enough is in application configuration. This manifests in a number of problems in a codebase.
The Problems The first problem is when nothing at all is done about it, and you end up with code spattered with this:</description></item></channel></rss>